{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"Z:\\\\Projects\\\\Tweet\\\\tweets-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createTweet, loadTweets } from '../lookup';\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets]; // change this to a server side call\n\n    createTweet(newVal, (response, status) => {\n      if (status === 201) {\n        tempNewTweets.unshift({\n          response\n        });\n      } else {\n        alert(\"An error occured\");\n      }\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      loadTweets(myCallback);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // perhaps i Unlike it?\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n}\n\n_s3(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["Z:/Projects/Tweet/tweets-web/src/tweets/components.js"],"names":["React","useEffect","useState","createTweet","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","response","status","unshift","alert","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","myCallback","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet","id","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { createTweet, loadTweets } from '../lookup'\r\n\r\nexport function TweetsComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n        // change this to a server side call\r\n        createTweet(newVal, (response, status) => {\r\n            if (status === 201) {\r\n                tempNewTweets.unshift({ response })\r\n            }\r\n            else {\r\n                alert(\"An error occured\")\r\n            }\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <div className='col-12 mb-3'>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n        </div>\r\n        <TweetsList newTweets={newTweets} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const myCallback = (response, status) => {\r\n                if (status === 200) {\r\n                    setTweetsInit(response)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            loadTweets(myCallback)\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\r\n    return tweets.map((item, index) => {\r\n        return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\r\n    })\r\n}\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if (action.type === 'like') {\r\n            if (userLike === true) {\r\n                // perhaps i Unlike it?\r\n                setLikes(likes - 1)\r\n                setUserLike(false)\r\n            } else {\r\n                setLikes(likes + 1)\r\n                setUserLike(true)\r\n            }\r\n\r\n        }\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'>\r\n            <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\r\n            <ActionBtn tweet={tweet} action={{ type: \"unlike\", display: \"Unlike\" }} />\r\n            <ActionBtn tweet={tweet} action={{ type: \"retweet\", display: \"\" }} />\r\n        </div>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}