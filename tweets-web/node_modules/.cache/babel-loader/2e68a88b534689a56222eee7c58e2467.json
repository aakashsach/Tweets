{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"Z:\\\\Projects\\\\Tweet\\\\tweets-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === 'false' ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c2 = TweetsList;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-11 mx-auto p-3 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0 text-muted small\",\n        children: \"Retweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n        hideActions: true,\n        className: ' ',\n        tweet: tweet.parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 25\n  }, this) : null;\n}\n_c3 = ParentTweet;\nexport function Tweet(props) {\n  _s3();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n        tweet: tweet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 12\n  }, this);\n}\n\n_s3(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ParentTweet\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["Z:/Projects/Tweet/tweets-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetAction","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","canTweet","handleBackendUpdate","response","status","tempNewTweets","unshift","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","username","handleDidRetweet","newTweet","updateTweetsInit","updateFinalTweets","map","item","index","ParentTweet","tweet","parent","Tweet","didRetweet","hideActions","actionTweet","setActionTweet","handlePerformAction","newActionTweet","id","content","type","display"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\r\n\r\nimport {\r\n  apiTweetAction,\r\n  apiTweetCreate, \r\n  apiTweetList} from './lookup'\r\n\r\nexport function TweetsComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    \r\n    const canTweet = props.canTweet === 'false' ? false : true \r\n    const handleBackendUpdate = (response, status) =>{\r\n      // backend api response handler\r\n      let tempNewTweets = [...newTweets]\r\n      if (status === 201){\r\n        tempNewTweets.unshift(response)\r\n        setNewTweets(tempNewTweets)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <div className='col-12 mb-3'>\r\n              <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n            </div>\r\n            }\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })\r\n  }\r\n\r\n\r\n \r\nexport function ParentTweet(props){\r\n  const {tweet} = props\r\n  return tweet.parent ? <div className='row'>\r\n  <div className='col-11 mx-auto p-3 border rounded'>\r\n    <p className='mb-0 text-muted small'>Retweet</p>\r\n    <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n  </div>\r\n  </div> : null\r\n}\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200){\r\n        setActionTweet(newActionTweet)\r\n      } else if (status === 201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n      \r\n    }\r\n    \r\n    return <div className={className}>\r\n            <div>\r\n              <p>{tweet.id} - {tweet.content}</p>\r\n              <ParentTweet tweet={tweet} />\r\n            </div>\r\n        {(actionTweet && hideActions !== true) && <div className='btn btn-group'>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n              </div>\r\n      }\r\n    </div>\r\n  }"]},"metadata":{},"sourceType":"module"}