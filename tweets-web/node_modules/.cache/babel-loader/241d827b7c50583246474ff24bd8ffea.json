{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"Z:\\\\Projects\\\\Tweet\\\\tweets-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsList(props) {\n  _s();\n\n  const [Tweets, setTweets] = useState([]);\n  useEffect(() => {\n    //do lookup\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return Tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s(TweetsList, \"lxQbg2QPM5uD0fDanFqgFtlT6cY=\");\n\n_c = TweetsList;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: [\" \", display, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"sources":["Z:/Projects/Tweet/tweets-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsList","props","Tweets","setTweets","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","className","actionDisplay","display","type","likes","Tweet","id","content"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AAEA,SAAQC,UAAR,QAAyB,WAAzB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACf;AACA,UAAMO,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACvC,UAAIA,MAAM,KAAG,GAAb,EAAiB;AACfH,QAAAA,SAAS,CAACE,QAAD,CAAT;AACD,OAFD,MAGI;AACFE,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,KAPD;;AAQAR,IAAAA,UAAU,CAACK,UAAD,CAAV;AAEC,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOF,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC/B,wBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAC;AAA9B,OAA0E,GAAEC,KAAM,YAAlF;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,CAAP;AAGD;;GApBaV,U;;KAAAA,U;AAuBhB,OAAO,SAASW,SAAT,CAAmBV,KAAnB,EAA0B;AAC7B,QAAM;AAACW,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBZ,KAAxB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,wBAAtD;AACA,QAAMC,aAAa,GAAGF,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAxB,GAAkC,QAAxD;AACA,QAAMA,OAAO,GAAGH,MAAM,CAACI,IAAP,KAAgB,MAAhB,GAA0B,GAAEL,KAAK,CAACM,KAAM,IAAGH,aAAc,EAAzD,GAA6DA,aAA7E;AACA,sBAAQ;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAAA,oBAAiCE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;MANaL,S;AAQhB,OAAO,SAASQ,KAAT,CAAelB,KAAf,EAAqB;AACxB,QAAM;AAACW,IAAAA;AAAD,MAAUX,KAAhB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,yBAAtD;AACA,sBAEE;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,4BACE;AAAA,iBAAIF,KAAK,CAACQ,EAAV,SAAkBR,KAAK,CAACS,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAET,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC,MAAN;AAAcD,UAAAA,OAAO,EAAC;AAAtB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC,QAAN;AAAgBD,UAAAA,OAAO,EAAC;AAAxB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC,SAAN;AAAiBD,UAAAA,OAAO,EAAC;AAAzB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAWD;MAdaG,K","sourcesContent":["\r\nimport React, { useEffect, useState} from 'react';\r\n\r\nimport {loadTweets} from '../lookup'\r\n\r\nexport function TweetsList(props){\r\n    const [Tweets, setTweets] = useState([])\r\n  \r\n    useEffect(() =>{\r\n    //do lookup\r\n    const myCallback = (response, status) => {\r\n      if (status===200){ \r\n        setTweets(response)\r\n      }\r\n      else{\r\n        alert(\"There was an error\")\r\n      }\r\n    }\r\n    loadTweets(myCallback)\r\n  \r\n    }, [])\r\n  \r\n    return Tweets.map((item, index)=>{\r\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }\r\n\r\n  \r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay\r\n    return  <button className={className} > {display} </button> \r\n  }\r\n  \r\nexport function Tweet(props){\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return(\r\n  \r\n      <div className={className}>\r\n        <p>{tweet.id } - {tweet.content}</p>\r\n        <div className = 'btn btn-group'>\r\n          <ActionBtn tweet={tweet} action={{type:\"like\", display:\"Likes\"}}/>\r\n          <ActionBtn tweet={tweet} action={{type:\"unlike\", display:\"Unlike\"}}/>\r\n          <ActionBtn tweet={tweet} action={{type:\"retweet\", display:\"Retweet\"}}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}