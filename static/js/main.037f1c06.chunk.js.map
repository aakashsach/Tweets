{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","MyComponent","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.037f1c06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403){\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        window.location.href=\"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    console.log(e)\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import React  from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n ","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    \r\n    backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\n  \r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-0 text-muted small'>Retweet</p>\r\n      <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      \r\n    \r\n        \r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      const handleLink = (event) => {\r\n          event.preventDefault()\r\n          window.location.href = `/${tweet.id}`\r\n      }\r\n\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n              <div>\r\n                <p>{tweet.id} - {tweet.content}</p>\r\n                <ParentTweet tweet={tweet} />\r\n              </div>\r\n           <div className='btn btn-group'>\r\n           {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                  </React.Fragment>\r\n            }\r\n                  {isDetail===true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n        \r\n      </div>\r\n    }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })\r\n  }\r\n\r\n","import React from 'react'\r\n\r\n\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n    <form onSubmit={handleSubmit}>\r\n      <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n      </textarea>\r\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n  </form>\r\n  </div>\r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {TweetsList} from './list'\r\nimport {Tweet} from './detail'\r\nimport {TweetCreate} from './create'\r\nimport {apiTweetDetail} from './lookup'\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    \r\n    const canTweet = props.canTweet === 'false' ? false : true \r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n      \r\n    }\r\n\r\n    \r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>\r\n              \r\n            }\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] =useState(null)\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status===200){\r\n      setTweet(response)\r\n    }\r\n    else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (didLookup===false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet===null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\n\n\nfunction App() {\n  \n  return (  \n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetDetailComponent, TweetsComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl){\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  appEl\n);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme')\nif (tweetsEl) {\n  const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(MyComponent, tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\")\n\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}